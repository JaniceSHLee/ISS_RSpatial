D_emmeans <- as.data.frame(D_emmeans)
D_emmeans$emmean <- exp(D_emmeans$emmean)
D_emmeans$lower.CL <- exp(D_emmeans$lower.CL)
D_emmeans$upper.CL <- exp(D_emmeans$upper.CL)
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = D_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = D_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = D, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "D (mm)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
#RTD
RTD_emmeans <- emmeans(RTDmodel, ~Mycorrhizaltype)
RTD_emmeans <- as.data.frame(RTD_emmeans)
RTD_emmeans$emmean <- exp(RTD_emmeans$emmean)
RTD_emmeans$lower.CL <- exp(RTD_emmeans$lower.CL)
RTD_emmeans$upper.CL <- exp(RTD_emmeans$upper.CL)
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = RTD_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = RTD_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = RTD, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "RTD (g/cm^3)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = SRL_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = SRL_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = SRL, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "SRL (cm/g)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
#dataset summary stats
summary(forestdata)
View(RTD_c)
summary(forestdata$SRL)
#dataset summary stats
summary(forestdata)
SRL_emmeans
SRL_emmeans
forestmodel1 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel1)
anova(forestmodel1, type = 2)
#deciding which model to keep
forestmodel2 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel3 <- lmer(SRL ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel2, forestmodel3, refit = FALSE) #drop interaction term
#final model
SRLmodel <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(SRLmodel)
anova(SRLmodel, type = 2)
#D
forestmodel5 <- lmer(D ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel5)
forestdata$D_trans <- log(forestdata$D)
forestmodel6 <- lmer(D_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel6)
anova(forestmodel6, type = 2)
anova(forestmodel7, forestmodel8, refit = FALSE) #drop interaction term
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel8, forestmodel8_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(Dmodel)
anova(Dmodel, type = 2)
summary(Dmodel)
5.205e-06/(5.205e-06 + 6.137e-04 + 1.189e-03) #variance explained by site blocking factor: 0.29%
#RTD
forestmodel10 <- lmer(RTD ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel10)
mcp.fnc(forestmodel10) #normality assumption not great
forestdata$RTD_trans <- log(forestdata$RTD)
forestmodel11 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel11)
anova(forestmodel11, type = 2)
#deciding which model to keep
forestmodel12 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel13 <- lmer(RTD_trans ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel12, forestmodel13, refit = FALSE) #drop interaction term
forestmodel13_1 <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel13, forestmodel13_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
RTDmodel <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(RTDmodel)
summary(RTDmodel)
SRL_emmeans <- emmeans(SRLmodel, ~Mycorrhizaltype)
SRL_emmeans <- as.data.frame(SRL_emmeans)
SRL_emmeans
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = SRL_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = SRL_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = SRL, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "SRL (cm/g)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
#3D plot
forestdata %>% plot_ly(x = ~SRL, y = ~RTD,
z = ~D, color = ~Mycorrhizaltype, colors = c("#0072B2", "#009E73"), symbol = ~Foresttype,
symbols = c("circle", "x", "square"), type = "scatter3d",
mode = "markers") %>% layout(title = "Root traits by Mycorrhizal type and Forest type",
scene = list(xaxis = list(title = "Specific root length (cm/g)"),
yaxis = list(title = "Root tissue density (g/cm^3)"),
zaxis = list(title = "Average root diameter (mm)")))
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = SRL_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = SRL_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = SRL, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "SRL (cm/g)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = D_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = D_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = D, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "D (mm)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = RTD_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = RTD_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = RTD, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "RTD (g/cm^3)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
anova(forestmodel3, forestmodel3_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
SRLmodel <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(SRLmodel) #assumptions okay
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#loading libraries
library("readxl") #read file
library("ggplot2") #plotting
library("plotly") #plotting 3D
library("Rmisc") #summary stats
library("dplyr") #tidying dataset
library("tidyverse") #manipulate dataset
library("lme4") #mixed models
library("lmerTest") #p values
library("LMERConvenienceFunctions") #diagnostic plots
library("emmeans") #model predicted values
#import data
mycorrhizae <- read_excel("/Users/chungwingko/Documents/NTU/Fall 2021/ES7028/R stuff/data/mycorrhizae.xlsx")
#view data
str(mycorrhizae)
#change to factors
mycorrhizae$Site <- as.factor(mycorrhizae$Site)
mycorrhizae$Foresttype <- as.factor(mycorrhizae$`Forest type`)
mycorrhizae$Mycorrhizaltype <- as.factor(mycorrhizae$`Mycorrhizal type`)
mycorrhizae$Family <- as.factor(mycorrhizae$Family)
#rename columns
mycorrhizae$SRL <- mycorrhizae$`SRL (cm/g)`
mycorrhizae$RTD <- mycorrhizae$`RTD (g/cm^3)`
mycorrhizae$D <- mycorrhizae$`D (mm)`
#reorder group factor levels
mycorrhizae$Foresttype <- factor(mycorrhizae$Foresttype, levels=c('Old growth', 'Naturally regenerating', 'Restored secondary'))
#take subset
forestdata <- subset(mycorrhizae, select = c(Site, Foresttype, Mycorrhizaltype, Family, SRL, RTD, D))
#dataset summary stats
summary(forestdata)
#3D plot
forestdata %>% plot_ly(x = ~SRL, y = ~RTD,
z = ~D, color = ~Mycorrhizaltype, colors = c("#0072B2", "#009E73"), symbol = ~Foresttype,
symbols = c("circle", "x", "square"), type = "scatter3d",
mode = "markers") %>% layout(title = "Root traits by Mycorrhizal type and Forest type",
scene = list(xaxis = list(title = "Specific root length (cm/g)"),
yaxis = list(title = "Root tissue density (g/cm^3)"),
zaxis = list(title = "Average root diameter (mm)")))
#summary stats
SRL_c <- summarySE(forestdata, measurevar="SRL", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
D_c <- summarySE(forestdata, measurevar="D", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
RTD_c <- summarySE(forestdata, measurevar="RTD", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
#graph mean and SE
ggplot(SRL_c, aes(Mycorrhizaltype, SRL, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=SRL-se, ymax=SRL+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Specific Root Length (cm/g)") + ggtitle("Specific Root Length by Mycorrhizal Type and Forest Type") + theme_bw()
ggplot(D_c, aes(Mycorrhizaltype, D, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=D-se, ymax=D+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Average Root Diameter (mm)") + ggtitle("Average Root Diameter by Mycorrhizal Type and Forest Type") + theme_bw()
ggplot(RTD_c, aes(Mycorrhizaltype, RTD, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=RTD-se, ymax=RTD+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Root Tissue Density (g/cm^3)") + ggtitle("Root Tissue Density by Mycorrhizal Type and Forest Type") + theme_bw()
forestmodel1 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel1) #assumptions met
anova(forestmodel1, type = 2)
#deciding which model to keep
forestmodel2 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel3 <- lmer(SRL ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel2, forestmodel3, refit = FALSE) #drop interaction term
forestmodel3_1 <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel3, forestmodel3_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
SRLmodel <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(SRLmodel) #assumptions okay
anova(SRLmodel, type = 2)
summary(SRLmodel)
4578/(4578 + 14501) #variance explained by family random effect: 23.99%
#D
forestmodel5 <- lmer(D ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel5) #normality assumption not great
forestdata$D_trans <- log(forestdata$D)
forestmodel6 <- lmer(D_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel6) #normality assumption better
anova(forestmodel6, type = 2)
#deciding which model to keep
forestmodel7 <- lmer(D_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel8 <- lmer(D_trans ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel7, forestmodel8, refit = FALSE) #drop interaction term
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel8, forestmodel8_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(Dmodel) #assumptions met
anova(Dmodel, type = 2)
summary(Dmodel)
5.205e-06/(5.205e-06 + 6.137e-04 + 1.189e-03) #variance explained by site blocking factor: 0.29%
6.137e-04/(5.205e-06 + 6.137e-04 + 1.189e-03) #variance explained by random family effect factor: 33.95%
mcp.fnc(forestmodel5) #normality assumption not great
mcp.fnc(forestmodel6) #normality assumption better
#RTD
forestmodel10 <- lmer(RTD ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel10) #normality assumption not great
forestdata$RTD_trans <- log(forestdata$RTD)
forestmodel11 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel11) #..better
anova(forestmodel11, type = 2)
#deciding which model to keep
forestmodel12 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel13 <- lmer(RTD_trans ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel12, forestmodel13, refit = FALSE) #drop interaction term
forestmodel13_1 <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel13, forestmodel13_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
RTDmodel <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(RTDmodel)
anova(RTDmodel, type = 2) #assumptions not great but okay
summary(RTDmodel)
4.278e-05/(4.278e-05 + 2.345e-04 + 5.027e-03) #variance explained by site blocking factor: 0.81%
2.345e-04/(4.278e-05 + 2.345e-04 + 5.027e-03) #variance explained by random family effect factor: 4.42%
SRL_emmeans <- emmeans(SRLmodel, ~Mycorrhizaltype)
SRL_emmeans <- as.data.frame(SRL_emmeans)
SRL_emmeans
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = SRL_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = SRL_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = SRL, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "SRL (cm/g)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Mychorrhizaltype/Family), data = forestdata, REML = TRUE)
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Mycorrhizaltype/Family), data = forestdata, REML = TRUE)
mcp.fnc(Dmodel) #assumptions met
#loading libraries
library("readxl") #read file
library("ggplot2") #plotting
library("plotly") #plotting 3D
library("Rmisc") #summary stats
library("dplyr") #tidying dataset
library("tidyverse") #manipulate dataset
library("lme4") #mixed models
library("lmerTest") #p values
library("LMERConvenienceFunctions") #diagnostic plots
library("emmeans") #model predicted values
#import data
mycorrhizae <- read_excel("/Users/chungwingko/Documents/NTU/Fall 2021/ES7028/R stuff/data/mycorrhizae.xlsx")
#view data
str(mycorrhizae)
#change to factors
mycorrhizae$Site <- as.factor(mycorrhizae$Site)
mycorrhizae$Foresttype <- as.factor(mycorrhizae$`Forest type`)
mycorrhizae$Mycorrhizaltype <- as.factor(mycorrhizae$`Mycorrhizal type`)
mycorrhizae$Family <- as.factor(mycorrhizae$Family)
#rename columns
mycorrhizae$SRL <- mycorrhizae$`SRL (cm/g)`
mycorrhizae$RTD <- mycorrhizae$`RTD (g/cm^3)`
mycorrhizae$D <- mycorrhizae$`D (mm)`
#reorder group factor levels
mycorrhizae$Foresttype <- factor(mycorrhizae$Foresttype, levels=c('Old growth', 'Naturally regenerating', 'Restored secondary'))
#take subset
forestdata <- subset(mycorrhizae, select = c(Site, Foresttype, Mycorrhizaltype, Family, SRL, RTD, D))
#dataset summary stats
summary(forestdata)
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Mycorrhizaltype/Family), data = forestdata, REML = TRUE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#loading libraries
library("readxl") #read file
library("ggplot2") #plotting
library("plotly") #plotting 3D
library("Rmisc") #summary stats
library("dplyr") #tidying dataset
library("tidyverse") #manipulate dataset
library("lme4") #mixed models
library("lmerTest") #p values
library("LMERConvenienceFunctions") #diagnostic plots
library("emmeans") #model predicted values
#import data
mycorrhizae <- read_excel("/Users/chungwingko/Documents/NTU/Fall 2021/ES7028/R stuff/data/mycorrhizae.xlsx")
#view data
str(mycorrhizae)
#change to factors
mycorrhizae$Site <- as.factor(mycorrhizae$Site)
mycorrhizae$Foresttype <- as.factor(mycorrhizae$`Forest type`)
mycorrhizae$Mycorrhizaltype <- as.factor(mycorrhizae$`Mycorrhizal type`)
mycorrhizae$Family <- as.factor(mycorrhizae$Family)
#rename columns
mycorrhizae$SRL <- mycorrhizae$`SRL (cm/g)`
mycorrhizae$RTD <- mycorrhizae$`RTD (g/cm^3)`
mycorrhizae$D <- mycorrhizae$`D (mm)`
#reorder group factor levels
mycorrhizae$Foresttype <- factor(mycorrhizae$Foresttype, levels=c('Old growth', 'Naturally regenerating', 'Restored secondary'))
#take subset
forestdata <- subset(mycorrhizae, select = c(Site, Foresttype, Mycorrhizaltype, Family, SRL, RTD, D))
#dataset summary stats
summary(forestdata)
#3D plot
forestdata %>% plot_ly(x = ~SRL, y = ~RTD,
z = ~D, color = ~Mycorrhizaltype, colors = c("#0072B2", "#009E73"), symbol = ~Foresttype,
symbols = c("circle", "x", "square"), type = "scatter3d",
mode = "markers") %>% layout(title = "Root traits by Mycorrhizal type and Forest type",
scene = list(xaxis = list(title = "Specific root length (cm/g)"),
yaxis = list(title = "Root tissue density (g/cm^3)"),
zaxis = list(title = "Average root diameter (mm)")))
#summary stats
SRL_c <- summarySE(forestdata, measurevar="SRL", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
D_c <- summarySE(forestdata, measurevar="D", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
RTD_c <- summarySE(forestdata, measurevar="RTD", groupvars=c("Mycorrhizaltype", "Foresttype", "Family"))
#graph mean and SE
ggplot(SRL_c, aes(Mycorrhizaltype, SRL, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=SRL-se, ymax=SRL+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Specific Root Length (cm/g)") + ggtitle("Specific Root Length by Mycorrhizal Type and Forest Type") + theme_bw()
ggplot(D_c, aes(Mycorrhizaltype, D, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=D-se, ymax=D+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Average Root Diameter (mm)") + ggtitle("Average Root Diameter by Mycorrhizal Type and Forest Type") + theme_bw()
ggplot(RTD_c, aes(Mycorrhizaltype, RTD, color = Family)) + geom_point(aes(color = Family), stat = "identity", position=position_dodge(0.5)) + facet_wrap(~Foresttype) + geom_errorbar(aes(ymin=RTD-se, ymax=RTD+se), width=.5, position=position_dodge(0.5)) + xlab("Mycorrhizal Type") + ylab("Root Tissue Density (g/cm^3)") + ggtitle("Root Tissue Density by Mycorrhizal Type and Forest Type") + theme_bw()
forestmodel1 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel1) #assumptions met
anova(forestmodel1, type = 2)
#deciding which model to keep
forestmodel2 <- lmer(SRL ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel3 <- lmer(SRL ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel2, forestmodel3, refit = FALSE) #drop interaction term
forestmodel3_1 <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel3, forestmodel3_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
SRLmodel <- lmer(SRL ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(SRLmodel) #assumptions okay
anova(SRLmodel, type = 2)
summary(SRLmodel)
4578/(4578 + 14501) #variance explained by family random effect: 23.99%
#D
forestmodel5 <- lmer(D ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel5) #normality assumption not great
forestdata$D_trans <- log(forestdata$D)
forestmodel6 <- lmer(D_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel6) #normality assumption better
anova(forestmodel6, type = 2)
#deciding which model to keep
forestmodel7 <- lmer(D_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel8 <- lmer(D_trans ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel7, forestmodel8, refit = FALSE) #drop interaction term
forestmodel8_1 <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel8, forestmodel8_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Mycorrhizaltype/Family), data = forestdata, REML = TRUE)
mcp.fnc(Dmodel) #assumptions met
anova(Dmodel, type = 2)
summary(Dmodel)
5.205e-06/(5.205e-06 + 6.137e-04 + 1.189e-03) #variance explained by site blocking factor: 0.29%
6.137e-04/(5.205e-06 + 6.137e-04 + 1.189e-03) #variance explained by random family effect factor: 33.95%
#RTD
forestmodel10 <- lmer(RTD ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel10) #normality assumption not great
forestdata$RTD_trans <- log(forestdata$RTD)
forestmodel11 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata)
mcp.fnc(forestmodel11) #..better
anova(forestmodel11, type = 2)
#deciding which model to keep
forestmodel12 <- lmer(RTD_trans ~ Foresttype*Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
forestmodel13 <- lmer(RTD_trans ~ Foresttype+Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel12, forestmodel13, refit = FALSE) #drop interaction term
forestmodel13_1 <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = FALSE)
anova(forestmodel13, forestmodel13_1, refit = FALSE) #drop non-significant forest fixed effect
#final model
RTDmodel <- lmer(RTD_trans ~ Mycorrhizaltype + (1|Site) + (1|Family), data = forestdata, REML = TRUE)
mcp.fnc(RTDmodel)
anova(RTDmodel, type = 2) #assumptions not great but okay
summary(RTDmodel)
4.278e-05/(4.278e-05 + 2.345e-04 + 5.027e-03) #variance explained by site blocking factor: 0.81%
2.345e-04/(4.278e-05 + 2.345e-04 + 5.027e-03) #variance explained by random family effect factor: 4.42%
SRL_emmeans <- emmeans(SRLmodel, ~Mycorrhizaltype)
SRL_emmeans <- as.data.frame(SRL_emmeans)
SRL_emmeans
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = SRL_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = SRL_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = SRL, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "SRL (cm/g)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
D_emmeans <- emmeans(forestmodel8, ~Mycorrhizaltype)
D_emmeans <- as.data.frame(D_emmeans)
D_emmeans$emmean <- exp(D_emmeans$emmean)
D_emmeans$lower.CL <- exp(D_emmeans$lower.CL)
D_emmeans$upper.CL <- exp(D_emmeans$upper.CL)
D_emmeans
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = D_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = D_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = D, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "D (mm)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
RTD_emmeans <- emmeans(RTDmodel, ~Mycorrhizaltype)
RTD_emmeans <- as.data.frame(RTD_emmeans)
RTD_emmeans$emmean <- exp(RTD_emmeans$emmean)
RTD_emmeans$lower.CL <- exp(RTD_emmeans$lower.CL)
RTD_emmeans$upper.CL <- exp(RTD_emmeans$upper.CL)
RTD_emmeans
ggplot() + geom_point(aes(x = Mycorrhizaltype, y = emmean, color = Mycorrhizaltype), position = position_dodge(width = 0.5), size = 3, data = RTD_emmeans) + geom_errorbar(aes(x = Mycorrhizaltype, ymin = lower.CL, ymax = upper.CL, color = Mycorrhizaltype), width = 0.2, size = 1, position = position_dodge(width = 0.5), data = RTD_emmeans) + geom_point(aes(x = Mycorrhizaltype, y = RTD, color = Mycorrhizaltype), position = position_nudge(x = -0.2, y = 0), data = forestdata) + labs(x = "Mycorrhizal Type", y = "RTD (g/cm^3)") + scale_color_manual(values = c("#0072B2", "#009E73")) + theme_bw() + theme(legend.position = "none")
#final model
Dmodel <- lmer(D_trans ~ Mycorrhizaltype + (1|Site) + (1|Mycorrhizaltype/Family), data = forestdata, REML = TRUE)
mcp.fnc(Dmodel) #assumptions met
anova(Dmodel, type = 2)
summary(Dmodel)
20 %% 8
setwd("~/Documents/NTU/Spring 2022/ISS- Spatial Analysis in R/ISS_RSpatial/Chung Wing")
plot(starbucks.km, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)
#Point pattern analysis in R
#load files
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))
#using spatstat package which accepts ppp, owin and im data formats
starbucks #a ppp point layer of Starbucks stores in Massachusetts;
ma #an owin polygon layer of Massachusetts boundaries;
pop #an im raster layer of population density distribution.
#### This is an example of how to import the data if your layers are stored as shapefile and raster file formats ####
# directly downloading files from the author’s Github page: http://github.com/mgimond/Spatial/raw/master/Data
#library(sf)
#library(maptools)
#library(raster)
# Load an MA.shp polygon shapefile
#s  <- st_read("MA.shp")
#w  <- as.owin(s)
#w.km <- rescale(w, 1000))
# Load a starbucks.shp point feature shapefile
#s  <- st_read("starbucks.shp")
#starbucks  <- as.ppp(s)
#marks(starbucks) <- NULL
#starbucks <- rescale(starbucks, 1000)
#Window(starbucks) <- starbucks
# Load a pop_sqmile.img population density raster layer
#img  <- raster("pop_sqmile.img")
#pop  <- as.im(img)
#### end of example ####
#prepping the data
##spatstat designed to work with points in ppp format
library(spatstat)
marks(starbucks)  <- NULL # remove attribute information
## define study boundaries
Window(starbucks) <- ma #Windows function binds the starbucks point layer with the Massachusetts boundary layer
#step to bind points to polygon layer for point pattern analysis
plot(starbucks, main=NULL, cols=rgb(0,0,0,.2), pch=20) #plot to ensure boundary is defined
## population density check
hist(pop, main=NULL, las=1) #left skewed, hence need to log transform
pop.lg <- log(pop)
hist(pop.lg, main=NULL, las=1)
# Density based analysis: First order property (how points are distributed relative to study area)
## Quadrat density
Q <- quadratcount(starbucks, nx= 6, ny=3) # diving into equal 3 rows and 6 columns
plot(starbucks, pch=20, cols="grey70", main=NULL)  # Plot points
plot(Q, add=TRUE)  # Add quadrat grid
### Compute the density for each quadrat
Q.d <- intensity(Q)
### Plot the density
plot(intensity(Q, image=TRUE), main=NULL, las=1)  # number of points per square meter
plot(starbucks, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)  # Add points
### Rescale all layers to km
starbucks.km <- rescale(starbucks, 1000, "km")
ma.km <- rescale(ma, 1000, "km")
pop.km    <- rescale(pop, 1000, "km")
pop.lg.km <- rescale(pop.lg, 1000, "km")
### Compute the density again for each quadrat (now in counts per km2)
Q   <- quadratcount(starbucks.km, nx= 6, ny=3)
Q.d <- intensity(Q)
### Plot the density
plot(intensity(Q, image=TRUE), main=NULL, las=1)  # Plot density raster
plot(starbucks.km, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)  # Add points
## Quadrat density on a tessellated surface
brk  <- c( -Inf, 4, 6, 8 , Inf)  # Define the breaks
Zcut <- cut(pop.lg.km, breaks=brk, labels=1:4)  # Classify the raster
E    <- tess(image=Zcut)  # Create a tesselated surface
plot(E, main="", las=1) #plot tessellated object
### Density: Number of points per quadrat area
Q   <- quadratcount(starbucks.km, tess = E)  # Tally counts
Q.d <- intensity(Q)  # Compute density
Q.d
### Plot density values
plot(intensity(Q, image=TRUE), las=1, main=NULL)
plot(starbucks.km, pch=20, cex=0.6, col=rgb(1,1,1,.5), add=TRUE)
cl <-  interp.colours(c("lightyellow", "orange" ,"red"), E$n) #modify colours (to better see map)
plot(intensity(Q, image=TRUE), las=1, col=cl, main=NULL)
plot(starbucks.km, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)
# Kernel density
# use the function density from the spatstat package
# https://www.rdocumentation.org/packages/spatstat.core/versions/2.1-2/topics/density.ppp
K1 <- density(starbucks.km) # Using the default bandwidth. What is this default?
plot(K1, main=NULL, las=1)
contour(K1, add=TRUE)
### 50km bandwidth (length unit extracted from layer's mapping units)
K2 <- density(starbucks.km, sigma=50) # Using a 50km bandwidth
plot(K2, main=NULL, las=1)
contour(K2, add=TRUE)
### Try different smoothing function. The default is gaussian.
K3 <- density(starbuc
K3 <- density(starbucks.km, kernel = "quartic", sigma=50) # Using a 50km bandwidth
### Try different smoothing function. The default is gaussian.
K3 <- density(starbucks.km, kernel = "disc", sigma=50) # Using a 50km bandwidth
#K3 <- density(starbucks.km, kernel = "epanechnikov", sigma=50) # Using a 50km bandwidth
plot(K3, main=NULL, las=1)
K3 <- density(starbucks.km, kernel = "quartic", sigma=50) # Using a 50km bandwidth
#K3 <- density(starbucks.km, kernel = "epanechnikov", sigma=50) # Using a 50km bandwidth
plot(K3, main=NULL, las=1)
K3 <- density(starbucks.km, kernel = "epanechnikov", sigma=50) # Using a 50km bandwidth
plot(K3, main=NULL, las=1)
contour(K3, add=TRUE)
### Compute rho using the ratio method. Other methods are re-weight and transform
rho <- rhohat(starbucks.km, pop.lg.km,  method="ratio")
# Generate rho vs covariate plot
plot(rho, las=1, main=NULL, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
### map of predicted starbucks density if population density is the driving process
pred <- predict(rho)
cl   <- interp.colours(c("lightyellow", "orange" ,"red"), 100) # Create color scheme
plot(pred, col=cl, las=1, main=NULL)
plot(pred, col=cl, las=1, main=NULL, gamma = 0.25) # gamma is used to stretch the colour scheme of the plot
vs observed
K1_vs_pred <- pairs(K1, pred, plot = FALSE)
plot(K1_vs_pred$pred ~ K1_vs_pred$K1, pch=20,
xlab = "Observed intensity",
ylab = "Predicted intensity",
col = rgb(0,0,0,0.1))
### An example of the plot if the predicted vs observed matches
K1_vs_K1 <- pairs(K1, K1, labels = c("K1a", "K1b"), plot = FALSE)
plot(K1_vs_K1$K1a ~ K1_vs_K1$K1b, pch=20,
xlab = "Observed intensity",
ylab = "Observed intensity")
#above line means more observed than expected, and below line is vice versa
### Summary statistics
summary(as.data.frame(K1_vs_pred))
plot(K1_vs_pred$pred ~ K1_vs_pred$K1, pch=20,
xlab = "Observed intensity",
ylab = "Predicted intensity",
col = rgb(0,0,0,0.1),
xlim = c(0, 0.04), ylim = c(0, 0.1))
abline(a=0, b = 1, col = "red") #red line shows reference 1-1 relationship
## Modeling intensity as a function of a covariate - to mathematically model the relationship
# Create the Poisson point process model (example in this tutorial)
PPM1 <- ppm(starbucks.km ~ pop.lg.km)
# Plot the relationship
plot(effectfun(PPM1, "pop.lg.km", se.fit=TRUE), main=NULL,
las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
PPM1 #keep in mind if you log transform, to back-transform data for interpretation
# Distance based analysis: second order property (how points are distributed relative to each other)
# assumes points are stationary
## ANN (avg nearest neighbor) analysis of starbucks stores
mean(nndist(starbucks.km, k=1)) # first nearest neighbour
mean(nndist(starbucks.km, k=2)) # second nearest neighbour
#parameter k can take on any order neighbor up to n-1
ANN <- apply(nndist(starbucks.km, k=1:100),2,FUN=mean) # nearest neighbour plot
plot(ANN ~ eval(1:100), type="b", main=NULL, las=1) #closest 100 neighbors
## K and L functions: cumulative analysis (distance between points for all distances)
K <- Kest(starbucks.km) # k function (compare to Kexpected with random distribution)
plot(K, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
L <- Lest(starbucks.km, main=NULL) # L function
plot(L, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
plot(L, . -r ~ r, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) )) #set Lexpected horizontal
