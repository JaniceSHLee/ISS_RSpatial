# load files
load(url("https://github.com/mgimond/Spatial/raw/main/Data/raster.RData"))
View(elev)
View(elev)
library(raster)
# map algebraic operations
bath2 <- bath*(-1)
# reclassification
bath3 <- bath2 < 0
# plot raster
library(tmap)
tm_shape(bath3) + tm_raster(palette = "Greys") +
tm_legend(outside = TRUE, text.size = .8)
m <- c(0, 100, 100,  100, 500, 500,  500,
1000,  1000, 1000, 11000, 11000)
m <- matrix(m, ncol=3, byrow = T)
m
bath3 <- reclassify(bath, m, right = T)
tm_shape(bath3) +
tm_raster(style="cat") +
tm_legend(outside = TRUE, text.size = .8)
bath
View(bath)
View(bath)
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))v
library(raster)
library(sp)
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))v
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))
library(sf)
library(maptools)
library(raster)
# Load an MA.shp polygon shapefile
s  <- st_read("MA.shp")
w  <- as.owin(s)
w.km <- rescale(w, 1000))
# Load a starbucks.shp point feature shapefile
s  <- st_read("starbucks.shp")
starbucks  <- as.ppp(s)
marks(starbucks) <- NULL
starbucks <- rescale(starbucks, 1000)
Window(starbucks) <- starbucks
# Load a pop_sqmile.img population density raster layer
img  <- raster("pop_sqmile.img")
pop  <- as.im(img)
library(sp)
# Load an MA.shp polygon shapefile
s  <- st_read("MA.shp")
load(url("https://github.com/mgimond/Spatial/raw/main/Data/ppa.RData"))
install.packages("spatstat")
# Load an MA.shp polygon shapefile
s  <- st_read("MA.shp")
w  <- as.owin(s)
w.km <- rescale(w, 1000))
# prepping the data
library(spatstat)
marks(starbucks)  <- NULL
beginner
vignette('getstart')
# prepping the data
library(spatstat) # in this tutorial we are using spatstat hence need ppp objects not spatial points or sf objects
marks(starbucks)  <- NULL # remove attribute information
## define study boundaries
Window(starbucks) <- ma #Windows function binds the starbucks point layer with the Massachusetts boundary layer
plot(starbucks, main=NULL, cols=rgb(0,0,0,.2), pch=20) #plot to ensure boundary is defined
