
> library(spatstat)
> marks(starbucks)  <- NULL
> Window(starbucks) <- ma
> plot(starbucks, main=NULL, cols=rgb(0,0,0,.2), pch=20)
> hist(pop, main=NULL, las=1)
> pop.lg <- log(pop)
> hist(pop.lg, main=NULL, las=1)
> Q <- quadratcount(starbucks, nx= 6, ny=3)
> plot(starbucks, pch=20, cols="grey70", main=NULL)  # Plot points
> plot(Q, add=TRUE)  # Add quadrat grid
> # Compute the density for each quadrat
> Q.d <- intensity(Q)
> 
> # Plot the density
> plot(intensity(Q, image=TRUE), main=NULL, las=1)  # Plot density raster
> plot(starbucks, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)  # Add points
> starbucks.km <- rescale(starbucks, 1000, "km")
> ma.km <- rescale(ma, 1000, "km")
> pop.km    <- rescale(pop, 1000, "km")
> pop.lg.km <- rescale(pop.lg, 1000, "km")
> # Compute the density for each quadrat (in counts per km2)
> Q   <- quadratcount(starbucks.km, nx= 6, ny=3)
> Q.d <- intensity(Q)
> 
> # Plot the density
> plot(intensity(Q, image=TRUE), main=NULL, las=1)  # Plot density raster
> plot(starbucks.km, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)  # Add points
> brk  <- c( -Inf, 4, 6, 8 , Inf)  # Define the breaks
> Zcut <- cut(pop.lg.km, breaks=brk, labels=1:4)  # Classify the raster
> E    <- tess(image=Zcut)  # Create a tesselated surface
> plot(E, main="", las=1)
> Q   <- quadratcount(starbucks.km, tess = E)  # Tally counts
> Q.d <- intensity(Q)  # Compute density
> Q.d
tile
           1            2            3            4 
0.0000000000 0.0003706106 0.0103132964 0.0889370933 
> plot(intensity(Q, image=TRUE), las=1, main=NULL)
> plot(starbucks.km, pch=20, cex=0.6, col=rgb(1,1,1,.5), add=TRUE)
> cl <-  interp.colours(c("lightyellow", "orange" ,"red"), E$n)
> plot( intensity(Q, image=TRUE), las=1, col=cl, main=NULL)
> plot(starbucks.km, pch=20, cex=0.6, col=rgb(0,0,0,.5), add=TRUE)
> K1 <- density(starbucks.km) # Using the default bandwidth
> plot(K1, main=NULL, las=1)
> contour(K1, add=TRUE)
> K2 <- density(starbucks.km, sigma=50) # Using a 50km bandwidth
> plot(K2, main=NULL, las=1)
> contour(K2, add=TRUE)
> K3 <- density(starbucks.km, kernel = "disc", sigma=50) # Using a 50km bandwidth
> plot(K3, main=NULL, las=1)
> contour(K3, add=TRUE)
> # Compute rho using the ratio method
> rho <- rhohat(starbucks.km, pop.lg.km,  method="ratio")
> # Generate rho vs covariate plot
> plot(rho, las=1, main=NULL, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> pred <- predict(rho)
> cl   <- interp.colours(c("lightyellow", "orange" ,"red"), 100) # Create color scheme
> plot(pred, col=cl, las=1, main=NULL, gamma = 0.25)
> K1_vs_pred <- pairs(K1, pred, plot = FALSE)
> plot(K1_vs_pred$pred ~ K1_vs_pred$K1, pch=20,
+      xlab = "Observed intensity", 
+      ylab = "Predicted intensity", 
+      col = rgb(0,0,0,0.1))
> K1_vs_K1 <- pairs(K1, K1, labels = c("K1a", "K1b"), plot = FALSE)
> plot(K1_vs_K1$K1a ~ K1_vs_K1$K1b, pch=20,
+      xlab = "Observed intensity", 
+      ylab = "Observed intensity")
> summary(as.data.frame(K1_vs_pred))
       K1                 pred         
 Min.   :8.846e-05   Min.   :0.000000  
 1st Qu.:1.207e-03   1st Qu.:0.000282  
 Median :3.377e-03   Median :0.001541  
 Mean   :8.473e-03   Mean   :0.007821  
 3rd Qu.:1.078e-02   3rd Qu.:0.005903  
 Max.   :5.693e-02   Max.   :5.101632  
> plot(K1_vs_pred$pred ~ K1_vs_pred$K1, pch=20,
+      xlab = "Observed intensity", 
+      ylab = "Predicted intensity", 
+      col = rgb(0,0,0,0.1),
+      xlim = c(0, 0.04), ylim = c(0, 0.1))
> abline(a=0, b = 1, col = "red")
> # Create the Poisson point process model
> PPM1 <- ppm(starbucks.km ~ pop.lg.km)
Warning message:
Values of the covariate ‘pop.lg.km’ were NA or undefined at 0.57% (4 out of 699) of the quadrature points. Occurred while executing: ppm.ppp(Q = starbucks.km, trend = ~pop.lg.km, data = NULL, interaction = NULL) 
> # Plot the relationship
> plot(effectfun(PPM1, "pop.lg.km", se.fit=TRUE), main=NULL, 
+      las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> PPM1
Nonstationary Poisson process

Log intensity:  ~pop.lg.km

Fitted trend coefficients:
(Intercept)   pop.lg.km 
 -13.710551    1.279928 

              Estimate       S.E.    CI95.lo    CI95.hi Ztest      Zval
(Intercept) -13.710551 0.46745489 -14.626746 -12.794356   *** -29.33021
pop.lg.km     1.279928 0.05626785   1.169645   1.390211   ***  22.74705
Problem:
 Values of the covariate ‘pop.lg.km’ were NA or undefined at 0.57% (4 out of 699) of the quadrature 
points

> mean(nndist(starbucks.km, k=1))
[1] 3.275492
> mean(nndist(starbucks.km, k=2))
[1] 5.81173
> ANN <- apply(nndist(starbucks.km, k=1:100),2,FUN=mean)
> plot(ANN ~ eval(1:100), type="b", main=NULL, las=1)
> K <- Kest(starbucks.km)
> plot(K, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> L <- Lest(starbucks.km, main=NULL)
> plot(L, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> plot(L, . -r ~ r, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> g  <- pcf(starbucks.km)
> plot(g, main=NULL, las=1, legendargs=list(cex=0.8, xpd=TRUE, inset=c(1.01, 0) ))
Warning message:
In min(D[scaledlegbox]) : no non-missing arguments to min; returning Inf
> ann.p <- mean(nndist(starbucks.km, k=1))
> ann.p
[1] 3.275492
> n     <- 599L               # Number of simulations
> ann.r <- vector(length = n) # Create an empty object to be used to store simulated ANN values
> for (i in 1:n){
+     rand.p   <- rpoint(n=starbucks.km$n, win=ma.km)  # Generate random point locations
+     ann.r[i] <- mean(nndist(rand.p, k=1))  # Tally the ANN values
+ }
> plot(rand.p, pch=16, main=NULL, cols=rgb(0,0,0,0.5))
> hist(ann.r, main=NULL, las=1, breaks=40, col="bisque", xlim=range(ann.p, ann.r))
> abline(v=ann.p, col="blue")
> n     <- 599L
> ann.r <- vector(length=n)
> for (i in 1:n){
+     rand.p   <- rpoint(n=starbucks.km$n, f=pop.km) 
+     ann.r[i] <- mean(nndist(rand.p, k=1))
+ }
> Window(rand.p) <- ma.km  # Replace raster mask with ma.km window
> plot(rand.p, pch=16, main=NULL, cols=rgb(0,0,0,0.5))
> hist(ann.r, main=NULL, las=1, breaks=40, col="bisque", xlim=range(ann.p, ann.r))
> abline(v=ann.p, col="blue")
> N.greater <- sum(ann.r > ann.p)
> p <- min(N.greater + 1, n + 1 - N.greater) / (n +1)
> p
[1] 0.001666667
> PPM1 <- ppm(starbucks.km ~ pop.lg.km)
Warning message:
Values of the covariate ‘pop.lg.km’ were NA or undefined at 0.57% (4 out of 699) of the quadrature points. Occurred while executing: ppm.ppp(Q = starbucks.km, trend = ~pop.lg.km, data = NULL, interaction = NULL) 
> PPM1
Nonstationary Poisson process

Log intensity:  ~pop.lg.km

Fitted trend coefficients:
(Intercept)   pop.lg.km 
 -13.710551    1.279928 

              Estimate       S.E.    CI95.lo    CI95.hi Ztest      Zval
(Intercept) -13.710551 0.46745489 -14.626746 -12.794356   *** -29.33021
pop.lg.km     1.279928 0.05626785   1.169645   1.390211   ***  22.74705
Problem:
 Values of the covariate ‘pop.lg.km’ were NA or undefined at 0.57% (4 out of 699) of the 
quadrature points

> PPM0 <- ppm(starbucks.km ~ 1)
> PPM0
Stationary Poisson process
Intensity: 0.008268627
             Estimate       S.E.   CI95.lo   CI95.hi Ztest      Zval
log(lambda) -4.795287 0.07647191 -4.945169 -4.645405   *** -62.70651
> starbucks.km$n / area(ma.km) 
[1] 0.008268627
> anova(PPM0, PPM1, test="LRT")
Analysis of Deviance Table

Model 1: ~1 	 Poisson
Model 2: ~pop.lg.km 	 Poisson
  Npar Df Deviance  Pr(>Chi)    
1    5                          
2    6  1   537.22 < 2.2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Warning messages:
1: Values of the covariate ‘pop.lg.km’ were NA or undefined at 0.57% (4 out of 699) of the quadrature points. Occurred while executing: ppm.ppp(Q = starbucks.km, trend = ~pop.lg.km, data = NULL, interaction = NULL,  
2: Models were re-fitted after discarding quadrature points that were illegal under some of the models
